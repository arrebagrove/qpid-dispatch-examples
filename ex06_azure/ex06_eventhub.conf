##
## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##   http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License
##

# See the qdrouterd.conf (5) manual page for information about this
# file's format and options.

container {
    workerThreads: 4
    containerName: Qpid.Dispatch.Router.A
}

router {
    mode: standalone
    routerId: Router.A
}

listener {
    addr: 0.0.0.0
    port: 5672
    authenticatePeer: no
}

ssl-profile {
    name: azure-ssl-profile
    cert-db: /opt/config/Equifax_Secure_Certificate_Authority.pem
}

connector {
    name: EVENTHUB
    addr: <namespace>.servicebus.windows.net
    port: 5671
    role: on-demand
    sasl-mechanisms: PLAIN
    saslUsername: <keyRule>
    saslPassword: <key>
    ssl-profile: azure-ssl-profile
    idleTimeoutSeconds: 120
}

# for sending to a specific partition : /Partitions/<partition>
linkRoutePattern {
    prefix: /Partitions/
    connector: EVENTHUB
}

# for sending to a publisher : /Publishers/<publisher>
linkRoutePattern {
    prefix: /Publishers/
    connector: EVENTHUB
}

# for receiving from a partition by default consumer group : /ConsumerGroups/$default/Partitions/<partition>
linkRoutePattern {
    prefix: /ConsumerGroups/$default/Partitions/
    connector: EVENTHUB
}

# the /ConsumerGroups/ prefix matches : /ConsumerGroups/<consumerGroup>/Partitions/<partition>
# in order to receive from a partition by a specified consumer group
linkRoutePattern {
    prefix: /ConsumerGroups/
    connector: EVENTHUB
}
